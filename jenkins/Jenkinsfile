pipeline {
  agent any
  tools {
    maven 'maven-3'
  }
  environment {
    BUILD_GROUP_ID = "andylke"
    BUILD_ARTIFACT_ID = readMavenPom().getArtifactId()
    BUILD_VERSION = readMavenPom().getVersion()
  }
  stages {
    stage ('Maven Build') {
        steps {
          bat 'mvn clean package'
        }
    }
    stage('Docker Build') {
      steps {
        script {
          docker.build("${BUILD_GROUP_ID}/${BUILD_ARTIFACT_ID}:${BUILD_VERSION}",
              "--build-arg BUILD_ARTIFACT_ID=${BUILD_ARTIFACT_ID} --build-arg BUILD_VERSION=${BUILD_VERSION} .")
        }
      }
    }
    stage('Docker Push') {
      steps {
        script {
          docker.withRegistry('https://registry.hub.docker.com', 'docker-credential') {
              docker.image("${BUILD_GROUP_ID}/${BUILD_ARTIFACT_ID}:${BUILD_VERSION}").push()
              docker.image("${BUILD_GROUP_ID}/${BUILD_ARTIFACT_ID}:${BUILD_VERSION}").push("latest")
          }
        }
      }
    }
    stage('Docker Stop') {
      steps {
        bat "docker ps -q --filter "name=${BUILD_ARTIFACT_ID}" | grep -q . && docker stop ${BUILD_ARTIFACT_ID} && docker rm ${BUILD_ARTIFACT_ID}"
      }
    }
    stage('Docker Run'){
      steps {
        bat "docker run --name ${BUILD_ARTIFACT_ID} -d -p 28080:8080 ${BUILD_GROUP_ID}/${BUILD_ARTIFACT_ID}:${BUILD_VERSION}"
      }
    }
  }
}
